# ~/Library/Rime/default.custom.yaml

patch:
  schema_list:
    - schema: luna_pinyin # 朙月拼音
    #- schema: double_pinyin_flypy

  switcher:
    hotkeys:
      - F3
      - Alt+grave
    caption: 
      "【设置菜单】"

  menu:
    page_size: 9  # 候选字数 

  # ascii_composer:
  # # `inline_ascii` 在输入框内插入英文。
  # # `commit_text` 候选文字上屏并切换至英文。
  # # `commit_code` 输入拼音上屏并切换至英文。
  # # `clear` 清除拼音并切换至英文。
  # # `noop` 屏蔽此按键。
  #   # 设置按左shift键上屏并切换到英文输入状态
  #   switch_key/Shift_L: commit_code
  #   # 设置按右shift键上屏并切换到英文输入状态
  #   switch_key/Shift_R: commit_code
  
  key_binder:
    bindings:
      # "ISO_Left_Tab"，一般对应"Shift+Tab"
      # "select: .next"，表示选择下一个候选项。原来是切换输入法用的。
      # when: has_menu，只有当候选词菜单显示时才会触发
      # when: composing，只有当用户正在输入时才会触发
      # page_up和up，目前我都是单行，所以没啥区别
      - { accept: equal, send: Down, when: has_menu }  # = 向下翻页
      - { accept: minus, send: Up, when: has_menu }  # -向上翻页
      - { accept: bracketleft, send: Left, when: composing }  # 【 向左选择候选词
      - { accept: bracketright, send: Right, when: composing }  # 】向右选择候选词
      - { accept: Control+space, toggle: full_shape, when: always }  # 全角/半角切换
      - { accept: Control+f, toggle: simplification, when: always }  # 繁简体切换
      - { accept: Tab, send: Right, when: has_menu }  # 多设tab向右选候选词
      - { accept: Shift+Tab, send: Left, when: has_menu }  # shift+tab向左选候选词          
      - { accept: ISO_Left_Tab, send: Left, when: has_menu }  # 不知道为啥没效果

  # recognizer/patterns/reverse_lookup: {}
